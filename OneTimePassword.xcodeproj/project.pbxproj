// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"OneTimePassword::OneTimePasswordPackageTests::ProductTarget" /* OneTimePasswordPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_127 /* Build configuration list for PBXAggregateTarget "OneTimePasswordPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_130 /* PBXTargetDependency */,
			);
			name = OneTimePasswordPackageTests;
			productName = OneTimePasswordPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_103 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* Package.swift */; };
		OBJ_109 /* Crypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Crypto.swift */; };
		OBJ_110 /* Generator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Generator.swift */; };
		OBJ_112 /* PersistentToken.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* PersistentToken.swift */; };
		OBJ_113 /* Token+URL.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Token+URL.swift */; };
		OBJ_114 /* Token.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Token.swift */; };
		OBJ_116 /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Cryptor::Cryptor::Product" /* Cryptor.framework */; };
		OBJ_117 /* Base32.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Base32::Base32::Product" /* Base32.framework */; };
		OBJ_125 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_136 /* EquatableTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* EquatableTests.swift */; };
		OBJ_137 /* GeneratorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* GeneratorTests.swift */; };
		OBJ_138 /* KeychainTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* KeychainTests.swift */; };
		OBJ_139 /* TokenSerializationTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* TokenSerializationTests.swift */; };
		OBJ_140 /* TokenTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* TokenTests.swift */; };
		OBJ_142 /* OneTimePassword.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "OneTimePassword::OneTimePassword::Product" /* OneTimePassword.framework */; };
		OBJ_143 /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Cryptor::Cryptor::Product" /* Cryptor.framework */; };
		OBJ_144 /* Base32.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Base32::Base32::Product" /* Base32.framework */; };
		OBJ_70 /* Base16.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* Base16.swift */; };
		OBJ_71 /* Base32.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* Base32.swift */; };
		OBJ_72 /* StringExtension.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* StringExtension.swift */; };
		OBJ_73 /* shim.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* shim.swift */; };
		OBJ_80 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_45 /* Package.swift */; };
		OBJ_86 /* Crypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* Crypto.swift */; };
		OBJ_87 /* Cryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* Cryptor.swift */; };
		OBJ_88 /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* Digest.swift */; };
		OBJ_89 /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* HMAC.swift */; };
		OBJ_90 /* KeyDerivation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* KeyDerivation.swift */; };
		OBJ_91 /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* Random.swift */; };
		OBJ_92 /* SSLPointerTricks.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* SSLPointerTricks.swift */; };
		OBJ_93 /* Status.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* Status.swift */; };
		OBJ_94 /* StreamCryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* StreamCryptor.swift */; };
		OBJ_95 /* Updatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* Updatable.swift */; };
		OBJ_96 /* Utilities.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* Utilities.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		16680EBE22877F2B00054707 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::Cryptor";
			remoteInfo = Cryptor;
		};
		16680EBF22877F2B00054707 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Base32::Base32";
			remoteInfo = Base32;
		};
		16680EC022877F2B00054707 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "OneTimePassword::OneTimePassword";
			remoteInfo = OneTimePassword;
		};
		16680EC122877F2B00054707 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Cryptor::Cryptor";
			remoteInfo = Cryptor;
		};
		16680EC222877F2B00054707 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Base32::Base32";
			remoteInfo = Base32;
		};
		16680EC322877F2D00054707 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "OneTimePassword::OneTimePasswordTests";
			remoteInfo = OneTimePasswordTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Base32::Base32::Product" /* Base32.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = Base32.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Cryptor::Cryptor::Product" /* Cryptor.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = Cryptor.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* Crypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Crypto.swift; sourceTree = "<group>"; };
		OBJ_11 /* Generator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Generator.swift; sourceTree = "<group>"; };
		OBJ_13 /* PersistentToken.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PersistentToken.swift; sourceTree = "<group>"; };
		OBJ_14 /* Token+URL.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Token+URL.swift"; sourceTree = "<group>"; };
		OBJ_15 /* Token.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Token.swift; sourceTree = "<group>"; };
		OBJ_18 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		OBJ_19 /* EquatableTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EquatableTests.swift; sourceTree = "<group>"; };
		OBJ_20 /* GeneratorTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = GeneratorTests.swift; sourceTree = "<group>"; };
		OBJ_21 /* KeychainTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeychainTests.swift; sourceTree = "<group>"; };
		OBJ_22 /* TokenSerializationTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TokenSerializationTests.swift; sourceTree = "<group>"; };
		OBJ_23 /* TokenTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TokenTests.swift; sourceTree = "<group>"; };
		OBJ_27 /* Crypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Crypto.swift; sourceTree = "<group>"; };
		OBJ_28 /* Cryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cryptor.swift; sourceTree = "<group>"; };
		OBJ_29 /* Digest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Digest.swift; sourceTree = "<group>"; };
		OBJ_30 /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		OBJ_31 /* KeyDerivation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyDerivation.swift; sourceTree = "<group>"; };
		OBJ_32 /* Random.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Random.swift; sourceTree = "<group>"; };
		OBJ_33 /* SSLPointerTricks.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SSLPointerTricks.swift; sourceTree = "<group>"; };
		OBJ_34 /* Status.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Status.swift; sourceTree = "<group>"; };
		OBJ_35 /* StreamCryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StreamCryptor.swift; sourceTree = "<group>"; };
		OBJ_36 /* Updatable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Updatable.swift; sourceTree = "<group>"; };
		OBJ_37 /* Utilities.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Utilities.swift; sourceTree = "<group>"; };
		OBJ_38 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = /Users/janiskirsteins/Projects/OneTimePassword/.build/checkouts/BlueCryptor/Package.swift; sourceTree = "<group>"; };
		OBJ_41 /* Base16.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Base16.swift; sourceTree = "<group>"; };
		OBJ_42 /* Base32.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Base32.swift; sourceTree = "<group>"; };
		OBJ_43 /* StringExtension.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringExtension.swift; sourceTree = "<group>"; };
		OBJ_44 /* shim.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = shim.swift; sourceTree = "<group>"; };
		OBJ_45 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/janiskirsteins/Projects/OneTimePassword/.build/checkouts/Base32--954716732000217361/Package.swift"; sourceTree = "<group>"; };
		OBJ_51 /* Configuration */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Configuration; sourceTree = SOURCE_ROOT; };
		OBJ_52 /* Carthage */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Carthage; sourceTree = SOURCE_ROOT; };
		OBJ_53 /* OneTimePassword.xcworkspace */ = {isa = PBXFileReference; lastKnownFileType = wrapper.workspace; path = OneTimePassword.xcworkspace; sourceTree = SOURCE_ROOT; };
		OBJ_54 /* OneTimePasswordLegacyTests */ = {isa = PBXFileReference; lastKnownFileType = folder; path = OneTimePasswordLegacyTests; sourceTree = SOURCE_ROOT; };
		OBJ_55 /* Cartfile.resolved */ = {isa = PBXFileReference; lastKnownFileType = text; path = Cartfile.resolved; sourceTree = "<group>"; };
		OBJ_56 /* LICENSE.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = LICENSE.md; sourceTree = "<group>"; };
		OBJ_57 /* CHANGELOG.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = CHANGELOG.md; sourceTree = "<group>"; };
		OBJ_58 /* Cartfile */ = {isa = PBXFileReference; lastKnownFileType = text; path = Cartfile; sourceTree = "<group>"; };
		OBJ_59 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* Cartfile.private */ = {isa = PBXFileReference; lastKnownFileType = text; path = Cartfile.private; sourceTree = "<group>"; };
		OBJ_61 /* CONTRIBUTING.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = CONTRIBUTING.md; sourceTree = "<group>"; };
		OBJ_62 /* OneTimePassword.podspec */ = {isa = PBXFileReference; lastKnownFileType = text; path = OneTimePassword.podspec; sourceTree = "<group>"; };
		OBJ_63 /* AUTHORS.txt */ = {isa = PBXFileReference; lastKnownFileType = text; path = AUTHORS.txt; sourceTree = "<group>"; };
		OBJ_64 /* CONDUCT.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = CONDUCT.md; sourceTree = "<group>"; };
		OBJ_9 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		"OneTimePassword::OneTimePassword::Product" /* OneTimePassword.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = OneTimePassword.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"OneTimePassword::OneTimePasswordTests::Product" /* OneTimePasswordTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = OneTimePasswordTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_115 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_116 /* Cryptor.framework in Frameworks */,
				OBJ_117 /* Base32.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_141 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_142 /* OneTimePassword.framework in Frameworks */,
				OBJ_143 /* Cryptor.framework in Frameworks */,
				OBJ_144 /* Base32.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_74 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_97 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_16 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_17 /* OneTimePasswordTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_17 /* OneTimePasswordTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_18 /* Info.plist */,
				OBJ_19 /* EquatableTests.swift */,
				OBJ_20 /* GeneratorTests.swift */,
				OBJ_21 /* KeychainTests.swift */,
				OBJ_22 /* TokenSerializationTests.swift */,
				OBJ_23 /* TokenTests.swift */,
			);
			name = OneTimePasswordTests;
			path = Tests/OneTimePasswordTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_24 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_25 /* Cryptor 1.0.28 */,
				OBJ_39 /* Base32 0.7.0 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_25 /* Cryptor 1.0.28 */ = {
			isa = PBXGroup;
			children = (
				OBJ_26 /* Cryptor */,
				OBJ_38 /* Package.swift */,
			);
			name = "Cryptor 1.0.28";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_26 /* Cryptor */ = {
			isa = PBXGroup;
			children = (
				OBJ_27 /* Crypto.swift */,
				OBJ_28 /* Cryptor.swift */,
				OBJ_29 /* Digest.swift */,
				OBJ_30 /* HMAC.swift */,
				OBJ_31 /* KeyDerivation.swift */,
				OBJ_32 /* Random.swift */,
				OBJ_33 /* SSLPointerTricks.swift */,
				OBJ_34 /* Status.swift */,
				OBJ_35 /* StreamCryptor.swift */,
				OBJ_36 /* Updatable.swift */,
				OBJ_37 /* Utilities.swift */,
			);
			name = Cryptor;
			path = .build/checkouts/BlueCryptor/Sources/Cryptor;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_39 /* Base32 0.7.0 */ = {
			isa = PBXGroup;
			children = (
				OBJ_40 /* Base32 */,
				OBJ_45 /* Package.swift */,
			);
			name = "Base32 0.7.0";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_40 /* Base32 */ = {
			isa = PBXGroup;
			children = (
				OBJ_41 /* Base16.swift */,
				OBJ_42 /* Base32.swift */,
				OBJ_43 /* StringExtension.swift */,
				OBJ_44 /* shim.swift */,
			);
			name = Base32;
			path = ".build/checkouts/Base32--954716732000217361/Sources/Base32";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_46 /* Products */ = {
			isa = PBXGroup;
			children = (
				"OneTimePassword::OneTimePasswordTests::Product" /* OneTimePasswordTests.xctest */,
				"OneTimePassword::OneTimePassword::Product" /* OneTimePassword.framework */,
				"Cryptor::Cryptor::Product" /* Cryptor.framework */,
				"Base32::Base32::Product" /* Base32.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_16 /* Tests */,
				OBJ_24 /* Dependencies */,
				OBJ_46 /* Products */,
				OBJ_51 /* Configuration */,
				OBJ_52 /* Carthage */,
				OBJ_53 /* OneTimePassword.xcworkspace */,
				OBJ_54 /* OneTimePasswordLegacyTests */,
				OBJ_55 /* Cartfile.resolved */,
				OBJ_56 /* LICENSE.md */,
				OBJ_57 /* CHANGELOG.md */,
				OBJ_58 /* Cartfile */,
				OBJ_59 /* README.md */,
				OBJ_60 /* Cartfile.private */,
				OBJ_61 /* CONTRIBUTING.md */,
				OBJ_62 /* OneTimePassword.podspec */,
				OBJ_63 /* AUTHORS.txt */,
				OBJ_64 /* CONDUCT.md */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* OneTimePassword */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* OneTimePassword */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Info.plist */,
				OBJ_10 /* Crypto.swift */,
				OBJ_11 /* Generator.swift */,
				OBJ_13 /* PersistentToken.swift */,
				OBJ_14 /* Token+URL.swift */,
				OBJ_15 /* Token.swift */,
			);
			name = OneTimePassword;
			path = Sources/OneTimePassword;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Base32::Base32" /* Base32 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_66 /* Build configuration list for PBXNativeTarget "Base32" */;
			buildPhases = (
				OBJ_69 /* Sources */,
				OBJ_74 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Base32;
			productName = Base32;
			productReference = "Base32::Base32::Product" /* Base32.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Base32::SwiftPMPackageDescription" /* Base32PackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_76 /* Build configuration list for PBXNativeTarget "Base32PackageDescription" */;
			buildPhases = (
				OBJ_79 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Base32PackageDescription;
			productName = Base32PackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"Cryptor::Cryptor" /* Cryptor */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_82 /* Build configuration list for PBXNativeTarget "Cryptor" */;
			buildPhases = (
				OBJ_85 /* Sources */,
				OBJ_97 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cryptor;
			productName = Cryptor;
			productReference = "Cryptor::Cryptor::Product" /* Cryptor.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Cryptor::SwiftPMPackageDescription" /* CryptorPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_99 /* Build configuration list for PBXNativeTarget "CryptorPackageDescription" */;
			buildPhases = (
				OBJ_102 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CryptorPackageDescription;
			productName = CryptorPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"OneTimePassword::OneTimePassword" /* OneTimePassword */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_105 /* Build configuration list for PBXNativeTarget "OneTimePassword" */;
			buildPhases = (
				OBJ_108 /* Sources */,
				OBJ_115 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_118 /* PBXTargetDependency */,
				OBJ_119 /* PBXTargetDependency */,
			);
			name = OneTimePassword;
			productName = OneTimePassword;
			productReference = "OneTimePassword::OneTimePassword::Product" /* OneTimePassword.framework */;
			productType = "com.apple.product-type.framework";
		};
		"OneTimePassword::OneTimePasswordTests" /* OneTimePasswordTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_132 /* Build configuration list for PBXNativeTarget "OneTimePasswordTests" */;
			buildPhases = (
				OBJ_135 /* Sources */,
				OBJ_141 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_145 /* PBXTargetDependency */,
				OBJ_146 /* PBXTargetDependency */,
				OBJ_147 /* PBXTargetDependency */,
			);
			name = OneTimePasswordTests;
			productName = OneTimePasswordTests;
			productReference = "OneTimePassword::OneTimePasswordTests::Product" /* OneTimePasswordTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"OneTimePassword::SwiftPMPackageDescription" /* OneTimePasswordPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_121 /* Build configuration list for PBXNativeTarget "OneTimePasswordPackageDescription" */;
			buildPhases = (
				OBJ_124 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = OneTimePasswordPackageDescription;
			productName = OneTimePasswordPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "OneTimePassword" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				English,
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_46 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Base32::Base32" /* Base32 */,
				"Base32::SwiftPMPackageDescription" /* Base32PackageDescription */,
				"Cryptor::Cryptor" /* Cryptor */,
				"Cryptor::SwiftPMPackageDescription" /* CryptorPackageDescription */,
				"OneTimePassword::OneTimePassword" /* OneTimePassword */,
				"OneTimePassword::SwiftPMPackageDescription" /* OneTimePasswordPackageDescription */,
				"OneTimePassword::OneTimePasswordPackageTests::ProductTarget" /* OneTimePasswordPackageTests */,
				"OneTimePassword::OneTimePasswordTests" /* OneTimePasswordTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_102 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_103 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_108 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_109 /* Crypto.swift in Sources */,
				OBJ_110 /* Generator.swift in Sources */,
				OBJ_112 /* PersistentToken.swift in Sources */,
				OBJ_113 /* Token+URL.swift in Sources */,
				OBJ_114 /* Token.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_124 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_125 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_135 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_136 /* EquatableTests.swift in Sources */,
				OBJ_137 /* GeneratorTests.swift in Sources */,
				OBJ_138 /* KeychainTests.swift in Sources */,
				OBJ_139 /* TokenSerializationTests.swift in Sources */,
				OBJ_140 /* TokenTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_69 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_70 /* Base16.swift in Sources */,
				OBJ_71 /* Base32.swift in Sources */,
				OBJ_72 /* StringExtension.swift in Sources */,
				OBJ_73 /* shim.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_79 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_80 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_85 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_86 /* Crypto.swift in Sources */,
				OBJ_87 /* Cryptor.swift in Sources */,
				OBJ_88 /* Digest.swift in Sources */,
				OBJ_89 /* HMAC.swift in Sources */,
				OBJ_90 /* KeyDerivation.swift in Sources */,
				OBJ_91 /* Random.swift in Sources */,
				OBJ_92 /* SSLPointerTricks.swift in Sources */,
				OBJ_93 /* Status.swift in Sources */,
				OBJ_94 /* StreamCryptor.swift in Sources */,
				OBJ_95 /* Updatable.swift in Sources */,
				OBJ_96 /* Utilities.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_118 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::Cryptor" /* Cryptor */;
			targetProxy = 16680EBE22877F2B00054707 /* PBXContainerItemProxy */;
		};
		OBJ_119 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Base32::Base32" /* Base32 */;
			targetProxy = 16680EBF22877F2B00054707 /* PBXContainerItemProxy */;
		};
		OBJ_130 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "OneTimePassword::OneTimePasswordTests" /* OneTimePasswordTests */;
			targetProxy = 16680EC322877F2D00054707 /* PBXContainerItemProxy */;
		};
		OBJ_145 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "OneTimePassword::OneTimePassword" /* OneTimePassword */;
			targetProxy = 16680EC022877F2B00054707 /* PBXContainerItemProxy */;
		};
		OBJ_146 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Cryptor::Cryptor" /* Cryptor */;
			targetProxy = 16680EC122877F2B00054707 /* PBXContainerItemProxy */;
		};
		OBJ_147 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Base32::Base32" /* Base32 */;
			targetProxy = 16680EC222877F2B00054707 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_100 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_101 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_106 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/OneTimePassword_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = OneTimePassword;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = OneTimePassword;
			};
			name = Debug;
		};
		OBJ_107 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/OneTimePassword_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = OneTimePassword;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = OneTimePassword;
			};
			name = Release;
		};
		OBJ_122 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4.2 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.2;
			};
			name = Debug;
		};
		OBJ_123 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4.2 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 4.2;
			};
			name = Release;
		};
		OBJ_128 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_129 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_133 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/OneTimePasswordTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = OneTimePasswordTests;
			};
			name = Debug;
		};
		OBJ_134 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/OneTimePasswordTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 4.2;
				TARGET_NAME = OneTimePasswordTests;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_67 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/Base32_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Base32;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Base32;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_68 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/Base32_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Base32;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Base32;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_77 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_78 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_83 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/Cryptor_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Cryptor;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_84 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = OneTimePassword.xcodeproj/Cryptor_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Cryptor;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_105 /* Build configuration list for PBXNativeTarget "OneTimePassword" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_106 /* Debug */,
				OBJ_107 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_121 /* Build configuration list for PBXNativeTarget "OneTimePasswordPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_122 /* Debug */,
				OBJ_123 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_127 /* Build configuration list for PBXAggregateTarget "OneTimePasswordPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_128 /* Debug */,
				OBJ_129 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_132 /* Build configuration list for PBXNativeTarget "OneTimePasswordTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_133 /* Debug */,
				OBJ_134 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_2 /* Build configuration list for PBXProject "OneTimePassword" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_66 /* Build configuration list for PBXNativeTarget "Base32" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_67 /* Debug */,
				OBJ_68 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_76 /* Build configuration list for PBXNativeTarget "Base32PackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_77 /* Debug */,
				OBJ_78 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_82 /* Build configuration list for PBXNativeTarget "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_83 /* Debug */,
				OBJ_84 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_99 /* Build configuration list for PBXNativeTarget "CryptorPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_100 /* Debug */,
				OBJ_101 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
